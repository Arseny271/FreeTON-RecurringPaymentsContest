.macro constructor
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
ENDS
; constructor TokensBox
ACCEPT
; end constructor TokensBox
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro init
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function init
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
;; >=
PUSHINT 100000000
GEQ
THROWIFNOT 100
;; get member balance
GETPARAM 7
INDEX 0
;; -
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
SUB
UFITS 128
PUSHINT 2
RAWRESERVE
;; Remote call IRootTokenContract.sendExpectedWalletAddress
;; push identifier root
GETGLOB 11
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x55b3a9fb
;; wallet_public_key_
PUSHINT 0
STUR 256
;; owner_address_
MYADDR
STSLICER
;; to
MYADDR
STSLICER
STBREFR
ENDC
PUSHINT 128
SENDRAWMSG
; end function init
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro expectedWalletAddressCallback
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode wallet_
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode wallet_public_key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode owner_address
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: wallet_
;; param: wallet_public_key
;; param: owner_address
; function expectedWalletAddressCallback
;; get member sender
GETGLOB 9
;; push identifier root
GETGLOB 11
SDEQ
THROWIFNOT 100
;; push identifier wallet_public_key
PUSH S1
EQINT 0
THROWIFNOT 100
;; push identifier owner_address
DUP
MYADDR
SDEQ
THROWIFNOT 100
;; get member balance
GETPARAM 7
INDEX 0
;; -
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
SUB
UFITS 128
PUSHINT 2
RAWRESERVE
; expValue
; end expValue
;; push identifier wallet_
PUSH S2
; colValue
SETGLOB 13
; end colValue
;; Remote call ITONTokenWallet.setReceiveCallback
;; push identifier wallet
GETGLOB 13
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x71eee875
;; receive_callback
MYADDR
STSLICER
;; allow_non_notifiable
TRUE
STIR 1
ENDC
PUSHINT 0
SENDRAWMSG
; end function expectedWalletAddressCallback
BLKDROP 3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro tokensReceivedCallback
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode token_wallet
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode 
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode 
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode 
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode sender_address
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode sender_wallet
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode original_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode updated_balance
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode payload
;; decode TvmCell
LDREF
ENDS
;; param: token_wallet
;; param: 
;; param: 
;; param: 
;; param: sender_address
;; param: sender_wallet
;; param: original_gas_to
;; param: updated_balance
;; param: payload
; function tokensReceivedCallback
;; if
;; push identifier token_wallet
PUSH S8
;; push identifier wallet
GETGLOB 13
SDEQ
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; get member sender
	GETGLOB 9
	;; push identifier wallet
	GETGLOB 13
	SDEQ
}
IF
PUSHCONT {
	;; if
	;; push identifier sender_wallet
	PUSH S3
	;; push identifier target
	GETGLOB 12
	SDEQ
	;; short-circuiting ||
	DUP
	PUSHCONT {
		DROP
		;; push identifier sender_address
		PUSH S4
		;; push identifier target
		GETGLOB 12
		SDEQ
	}
	IFNOT
	PUSHCONT {
		;; if
		;; get member value
		CALLREF {
			CALL $message_balance_macro$
		}
		;; >
		PUSHINT 200000000
		GREATER
		PUSHCONT {
			ACCEPT
			NEWC
			ENDC
			;; decl: back_payload
			;; push identifier payload
			PUSH S1
			CTOS
			SREFS
			;; >=
			PUSHINT 1
			GEQ
			;; decl: notify_back
			;; if
			;; push identifier notify_back
			DUP
			PUSHCONT {
				;; push identifier payload
				PUSH S2
				CTOS
				LDREF
				; colValue
				DROP
				; expValue
				; end expValue
				; colValue
				POP S2
				; end colValue
			}
			IF
			;; end if
			;; Remote call ITONTokenWallet.transfer
			;; push identifier wallet
			GETGLOB 13
			NEWC
			STSLICECONST x62_
			STSLICE
			PUSHINT 109
			STZEROES
			STSLICECONST 0
			STSLICECONST 1
			NEWC
			STSLICECONST x4bf160e2
			;; to
			;; push identifier sender_wallet
			PUSH S7
			STSLICER
			;; tokens
			;; push identifier updated_balance
			PUSH S5
			STUR 128
			;; grams
			PUSHINT 0
			STUR 128
			;; send_gas_to
			;; push identifier original_gas_to
			PUSH S6
			STSLICER
			;; notify_receiver
			;; push identifier notify_back
			PUSH S2
			STIR 1
			;; payload
			;; push identifier back_payload
			PUSH S3
			STREFR
			STBREFR
			ENDC
			PUSHINT 64
			SENDRAWMSG
			;; Remote call IDestroyable.destroy
			;; push identifier wallet
			GETGLOB 13
			NEWC
			STSLICECONST x62_
			STSLICE
			PUSHSLICE x3989680000000000000000000000000004_
			STSLICER
			STSLICECONST 0
			STSLICECONST 0
			STSLICECONST x0f0258aa
			;; gas_dest
			;; push identifier original_gas_to
			PUSH S5
			STSLICER
			ENDC
			PUSHINT 0
			SENDRAWMSG
			;; push identifier original_gas_to
			PUSH S4
			NEWC
			STSLICECONST x42_
			STSLICE
			PUSHSLICE x203e8000000000000000000000000004_
			STSLICER
			STSLICECONST 0
			STSLICECONST 0
			ENDC
			PUSHINT 160
			SENDRAWMSG
			DROP2
		}
		IF
		;; end if
	}
	IF
	;; end if
}
IF
;; end if
; end function tokensReceivedCallback
BLKDROP 9
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro fallback_macro
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; function fallback
; end function fallback
CALLREF {
	CALL $c7_to_c4$
}

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
GETGLOB 12
GETGLOB 13
XCHG s2
STSLICE
STSLICE
GETGLOB 10
GETGLOB 11
REVERSE 4, 0
STBREF
STSLICE
STSLICE
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDMSGADDR
SETGLOB 13
SETGLOB 12
LDMSGADDR
LDMSGADDR
DROP
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDMSGADDR
	SETGLOB 13
	SETGLOB 12
	LDMSGADDR
	LDMSGADDR
	DROP
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init creator
	PUSHINT 1
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	IFNOT
	SETGLOB 10
	; init root
	PUSHINT 2
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	IFNOT
	SETGLOB 11
	; init target
	PUSHINT 3
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	IFNOT
	SETGLOB 12
	; init wallet
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 13
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
PUSHCONT {
	DROP2 ; funcId and restSlice
	CALLREF {
		CALL $fallback_macro$
	}
}
IF

.internal-alias :main_external, -1
.internal :main_external
PUSHINT -1 ; main_external trans id
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice havePubkey
	PUSHCONT {
		LDU 256       ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG s3
		SWAP
	}
	PUSHCONT {
		XCHG s2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1      ; havePubkey msgSlice
	SWAP       ; msgSlice havePubkey
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
PUSHCONT {
	DROP2 ; funcId and restSlice
	CALLREF {
		CALL $fallback_macro$
	}
}
IF

.macro creator
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
;; emitting 1 value
DUP
EQINT -1
PUSHCONT {
	GETGLOB 10
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xbeee132a
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
TRUE
SETGLOB 7

.macro root
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
;; emitting 1 value
DUP
EQINT -1
PUSHCONT {
	GETGLOB 11
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xb7295e20
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
TRUE
SETGLOB 7

.macro target
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
;; emitting 1 value
DUP
EQINT -1
PUSHCONT {
	GETGLOB 12
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xa976d463
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
TRUE
SETGLOB 7

.macro wallet
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
;; emitting 1 value
DUP
EQINT -1
PUSHCONT {
	GETGLOB 13
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x94870017
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
TRUE
SETGLOB 7

.macro public_function_selector
DUP
PUSHINT 344391703
LEQ
PUSHCONT {
	DUP
	PUSHINT 292780380
	EQUAL
	IFJMPREF {
		CALL $expectedWalletAddressCallback$
	}
	DUP
	PUSHINT 344391703
	EQUAL
	IFJMPREF {
		CALL $wallet$
	}
}
IFJMP
DUP
PUSHINT 805475044
LEQ
PUSHCONT {
	DUP
	PUSHINT 695653475
	EQUAL
	IFJMPREF {
		CALL $target$
	}
	DUP
	PUSHINT 805475044
	EQUAL
	IFJMPREF {
		CALL $init$
	}
}
IFJMP
DUP
PUSHINT 1055789866
LEQ
PUSHCONT {
	DUP
	PUSHINT 925457952
	EQUAL
	IFJMPREF {
		CALL $root$
	}
	DUP
	PUSHINT 1055789866
	EQUAL
	IFJMPREF {
		CALL $creator$
	}
}
IFJMP
DUP
PUSHINT 1756716863
LEQ
PUSHCONT {
	DUP
	PUSHINT 1497440185
	EQUAL
	IFJMPREF {
		CALL $tokensReceivedCallback$
	}
	DUP
	PUSHINT 1756716863
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
}
IFJMP
